{
    "swagger": "2.0",
    "info": {
        "description": "Genshin Academy Service API",
        "title": "Genshin Academy Service API",
        "contact": {}
    },
    "basePath": "/api",
    "paths": {
        "/characters": {
            "get": {
                "description": "Retrieves all characters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "characters"
                ],
                "summary": "Get all characters from database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Result language",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GenshinCharacter"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new character.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "characters"
                ],
                "summary": "Add genshin character to database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en,ru",
                        "description": "Languages splitted by comma. Specify each language you are adding in json body",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Character data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CharacterLocalized"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GenshinCharacter"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/characters/stats": {
            "get": {
                "description": "Retrieves all characters stats.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weasel_appraiser"
                ],
                "summary": "Get all characters stats for weasel appraiser from database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Result language",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WeaselAppraiserCharacter"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/characters/stats/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates character's stats.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weasel_appraiser"
                ],
                "summary": "Update character's stats",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en,ru",
                        "description": "Languages splitted by comma. Specify each language you are adding in json body",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Character stats",
                        "name": "stats",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ArtifactProfit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcademyCharacter"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "Retrieves all news.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Get all news from database sorted by date",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Result language",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/News"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates news.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Add news to database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en,ru",
                        "description": "Languages splitted by comma. Specify each language you are adding in json body",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "News data",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewsLocalized"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/News"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates news.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Update news in the database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en,ru",
                        "description": "Languages splitted by comma. Specify each language you are adding in json body",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "News data",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewsLocalized"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/News"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "description": "Retrieves all tables.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Get all tables from database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Result language",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Table"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Create a new table",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en,ru",
                        "description": "Languages splitted by comma. Specify each language you are adding in json body",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Table data",
                        "name": "table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TablesLocalized"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Table"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tables/{id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Update a table",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en,ru",
                        "description": "Languages splitted by comma. Specify each language you are adding in json body",
                        "name": "Accept-Languages",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Table ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Table data",
                        "name": "table",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TablesLocalized"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Table"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AcademyCharacter": {
            "type": "object",
            "properties": {
                "id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ModelId"
                        }
                    ],
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Lisa"
                },
                "fullName": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Lisa"
                },
                "description": {
                    "type": "string",
                    "x-order": "3",
                    "example": "The languid but knowledgeable Librarian of the Knights of Favonius, deemed by Sumeru Akademiya to be their most distinguished graduate in the past two centuries."
                },
                "title": {
                    "type": "string",
                    "x-order": "4",
                    "example": "Witch of Purple Rose"
                },
                "element": {
                    "description": "Character type:\n* 0 - Undefined\n* 1 - Pyro\n* 2 - Hydro\n* 3 - Geo\n* 4 - Anemo\n* 5 - Electro\n* 6 - Cryo\n* 7 - Dendro",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Element"
                        }
                    ],
                    "x-order": "5",
                    "example": 5
                },
                "profits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ArtifactProfit"
                    },
                    "x-order": "5"
                },
                "rarity": {
                    "description": "Rarity types:\n* 3 - Epic 4 star rarity\n* 4 - Legendary 5 star rarity",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Rarity"
                        }
                    ],
                    "x-order": "6",
                    "example": 3
                },
                "weapon": {
                    "description": "Character weapon type:\n* 0 - Undefined\n* 1 - Sword\n* 2 - Claymore\n* 3 - Polearm\n* 4 - Bow\n* 5 - Catalyst",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WeaponType"
                        }
                    ],
                    "x-order": "7",
                    "example": 5
                },
                "icons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacterIcon"
                    }
                }
            }
        },
        "AcademyId": {
            "type": "integer",
            "enum": [
                0
            ],
            "x-enum-varnames": [
                "UNDEFINED_ID"
            ]
        },
        "ArtifactProfit": {
            "type": "object",
            "required": [
                "slot"
            ],
            "properties": {
                "ATK": {
                    "type": "integer"
                },
                "ATK_P": {
                    "type": "integer"
                },
                "CD": {
                    "type": "integer"
                },
                "CR": {
                    "type": "integer"
                },
                "DEF": {
                    "type": "integer"
                },
                "DEF_P": {
                    "type": "integer"
                },
                "ELEM": {
                    "type": "integer"
                },
                "EM": {
                    "type": "integer"
                },
                "ER": {
                    "type": "integer"
                },
                "HEAL": {
                    "type": "integer"
                },
                "HP": {
                    "type": "integer"
                },
                "HP_P": {
                    "type": "integer"
                },
                "PHYS": {
                    "type": "integer"
                },
                "slot": {
                    "$ref": "#/definitions/ProfitSlot"
                }
            }
        },
        "CharacterIcon": {
            "type": "object",
            "properties": {
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CharacterIconType"
                        }
                    ],
                    "example": 0
                },
                "url": {
                    "type": "string",
                    "example": "/characters/icons/lisa.webp"
                }
            }
        },
        "CharacterIconType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Front",
                "Side",
                "Gacha"
            ]
        },
        "CharacterLocalized": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "0",
                    "example": {
                        "en": "Lisa",
                        "ru": "Лиза"
                    }
                },
                "rarity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Rarity"
                        }
                    ],
                    "x-order": "1",
                    "example": 4
                },
                "element": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ElementText"
                        }
                    ],
                    "x-order": "2",
                    "example": "Electro"
                },
                "weaponType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WeaponText"
                        }
                    ],
                    "x-order": "3",
                    "example": "Catalyst"
                }
            }
        },
        "Element": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "x-enum-varnames": [
                "UndefinedElement",
                "Pyro",
                "Hydro",
                "Geo",
                "Anemo",
                "Electro",
                "Cryo",
                "Dendro"
            ]
        },
        "ElementText": {
            "type": "string",
            "enum": [
                "None",
                "Pyro",
                "Hydro",
                "Geo",
                "Anemo",
                "Electro",
                "Cryo",
                "Dendro"
            ],
            "x-enum-varnames": [
                "UndefinedElement",
                "Pyro",
                "Hydro",
                "Geo",
                "Anemo",
                "Electro",
                "Cryo",
                "Dendro"
            ]
        },
        "GenshinCharacter": {
            "type": "object",
            "properties": {
                "id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ModelId"
                        }
                    ],
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Lisa"
                },
                "fullName": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Lisa"
                },
                "description": {
                    "type": "string",
                    "x-order": "3",
                    "example": "The languid but knowledgeable Librarian of the Knights of Favonius, deemed by Sumeru Akademiya to be their most distinguished graduate in the past two centuries."
                },
                "title": {
                    "type": "string",
                    "x-order": "4",
                    "example": "Witch of Purple Rose"
                },
                "element": {
                    "description": "Character type:\n* 0 - Undefined\n* 1 - Pyro\n* 2 - Hydro\n* 3 - Geo\n* 4 - Anemo\n* 5 - Electro\n* 6 - Cryo\n* 7 - Dendro",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Element"
                        }
                    ],
                    "x-order": "5",
                    "example": 5
                },
                "rarity": {
                    "description": "Rarity types:\n* 3 - Epic 4 star rarity\n* 4 - Legendary 5 star rarity",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Rarity"
                        }
                    ],
                    "x-order": "6",
                    "example": 3
                },
                "weapon": {
                    "description": "Character weapon type:\n* 0 - Undefined\n* 1 - Sword\n* 2 - Claymore\n* 3 - Polearm\n* 4 - Bow\n* 5 - Catalyst",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WeaponType"
                        }
                    ],
                    "x-order": "7",
                    "example": 5
                },
                "icons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacterIcon"
                    }
                }
            }
        },
        "ModelId": {
            "type": "string",
            "enum": [
                ""
            ],
            "x-enum-varnames": [
                "DEFAULT_ID"
            ]
        },
        "News": {
            "type": "object",
            "properties": {
                "id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AcademyId"
                        }
                    ],
                    "x-order": "0"
                },
                "title": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Pre-Release"
                },
                "description": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Who needs news when there are such cuties above???"
                },
                "preview": {
                    "type": "string",
                    "x-order": "3",
                    "example": "https://example.com"
                },
                "redirectUrl": {
                    "type": "string",
                    "x-order": "4",
                    "example": "https://example.com"
                },
                "createdAt": {
                    "type": "string",
                    "x-order": "5",
                    "example": "2023-05-21T18:24:28.960356Z"
                }
            }
        },
        "NewsLocalized": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "0",
                    "example": {
                        "en": "Pre-Release",
                        "ru": "Не прошло и 6 лет..."
                    }
                },
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "1",
                    "example": {
                        "en": "Who needs news when there are such cuties above???",
                        "ru": "Кому нужны новости когда есть такие милашки???"
                    }
                },
                "preview": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "2",
                    "example": {
                        "en": "news-en.webp",
                        "ru": "news-ru.webp"
                    }
                },
                "redirect": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "3",
                    "example": {
                        "en": "https://example.com",
                        "ru": "https://example.com"
                    }
                }
            }
        },
        "ProfitSlot": {
            "type": "string",
            "enum": [
                "substats",
                "flower",
                "plume",
                "sands",
                "goblet",
                "circlet"
            ],
            "x-enum-varnames": [
                "SubStats",
                "Flower",
                "Plume",
                "Sands",
                "Goblet",
                "Circlet"
            ]
        },
        "Rarity": {
            "type": "integer",
            "enum": [
                5,
                4,
                3
            ],
            "x-enum-varnames": [
                "Legendary",
                "Epic",
                "Rare"
            ]
        },
        "Table": {
            "type": "object",
            "properties": {
                "id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AcademyId"
                        }
                    ],
                    "x-order": "0"
                },
                "title": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Monsters' resistances and shields"
                },
                "description": {
                    "type": "string",
                    "x-order": "3",
                    "example": "Elemental resistances and gauges of their elemental shields or structures along with notes on their specific mechanics that change those values."
                },
                "icon": {
                    "type": "string",
                    "x-order": "4",
                    "example": "https://example.com"
                },
                "redirectUrl": {
                    "type": "string",
                    "x-order": "5",
                    "example": "https://example.com"
                }
            }
        },
        "TablesLocalized": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "1",
                    "example": {
                        "en": "Monsters' resistances and shields",
                        "ru": "Сопротивления и щиты монстров"
                    }
                },
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "2",
                    "example": {
                        "en": "Elemental resistances and gauges of their elemental shields or structures along with notes on their specific mechanics that change those values.",
                        "ru": "Лиза"
                    }
                },
                "icon": {
                    "type": "string",
                    "x-order": "3",
                    "example": "shield.webp"
                },
                "redirect": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-order": "4",
                    "example": {
                        "en": "https://example.com",
                        "ru": "https://example.com"
                    }
                }
            }
        },
        "WeaponText": {
            "type": "string",
            "enum": [
                "None",
                "Sword",
                "Claymore",
                "Polearm",
                "Bow",
                "Catalyst"
            ],
            "x-enum-varnames": [
                "UndefinedWeapon",
                "Sword",
                "Claymore",
                "Polearm",
                "Bow",
                "Catalyst"
            ]
        },
        "WeaponType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "UndefinedWeapon",
                "Sword",
                "Claymore",
                "Polearm",
                "Bow",
                "Catalyst"
            ]
        },
        "WeaselAppraiserCharacter": {
            "type": "object",
            "properties": {
                "character_id": {
                    "$ref": "#/definitions/ModelId"
                },
                "element": {
                    "$ref": "#/definitions/Element"
                },
                "icon_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stats_profit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ArtifactProfit"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Token for endpoints",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
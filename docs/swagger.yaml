basePath: /api
definitions:
  Character:
    properties:
      description:
        example: English description
        type: string
        x-order: "3"
      element:
        allOf:
        - $ref: '#/definitions/types.Element'
        example: Pyro
        x-order: "5"
      icons_url:
        allOf:
        - $ref: '#/definitions/types.IconsUrl'
        example:
          "0": https://example.com/hu_tao.webp
        x-order: "7"
      id:
        example: hu_tao
        type: string
        x-order: "1"
      name:
        example: Hu Tao
        type: string
        x-order: "2"
      rarity:
        allOf:
        - $ref: '#/definitions/types.Rarity'
        example: "5"
        x-order: "4"
      weapon_type:
        allOf:
        - $ref: '#/definitions/types.WeaponType'
        example: Polearm
        x-order: "6"
    type: object
  CharacterArtifactProfits:
    properties:
      circlet:
        allOf:
        - $ref: '#/definitions/models.ArtifactProfit'
        x-order: "6"
      flower:
        allOf:
        - $ref: '#/definitions/models.ArtifactProfit'
        x-order: "2"
      goblet:
        allOf:
        - $ref: '#/definitions/models.ArtifactProfit'
        x-order: "5"
      plume:
        allOf:
        - $ref: '#/definitions/models.ArtifactProfit'
        x-order: "3"
      sands:
        allOf:
        - $ref: '#/definitions/models.ArtifactProfit'
        x-order: "4"
      substats:
        allOf:
        - $ref: '#/definitions/models.ArtifactProfit'
        x-order: "1"
    type: object
  CreateCharacterRequest:
    properties:
      description:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: English description
          ru: Русское описание
        x-order: "2"
      element:
        allOf:
        - $ref: '#/definitions/types.Element'
        example: Pyro
        x-order: "4"
      name:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: Hu Tao
          ru: Ху Тао
        x-order: "1"
      rarity:
        allOf:
        - $ref: '#/definitions/types.Rarity'
        example: "5"
        x-order: "3"
      weapon_type:
        allOf:
        - $ref: '#/definitions/types.WeaponType'
        example: Polearm
        x-order: "5"
    type: object
  CreateNewsRequest:
    properties:
      description:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: News description
          ru: Описание новости
        x-order: "2"
      preview:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: news-en.webp
          ru: news-ru.webp
        x-order: "3"
      redirect_url:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: https://example.com/news/redirect_en
          ru: https://example.com/news/redirect_ru
        x-order: "4"
      title:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: News title
          ru: Заголовок новости
        x-order: "1"
    type: object
  CreateTableRequest:
    properties:
      description:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: Elemental resistances and gauges of their elemental shields or structures
            along with notes on their specific mechanics that change those values.
          ru: Лиза
        x-order: "2"
      icon:
        example: https://example.com/tables/shield.webp
        type: string
        x-order: "3"
      redirect_url:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: https://example.com/tables/redirect_en
          ru: https://example.com/tables/redirect_ru
        x-order: "4"
      title:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: Monsters' resistances and shields
          ru: Сопротивления и щиты монстров
        x-order: "1"
    type: object
  News:
    properties:
      created_at:
        example: 2020-01-01T00:00:0
        type: string
        x-order: "6"
      description:
        example: News description
        type: string
        x-order: "3"
      id:
        example: 1
        type: integer
        x-order: "1"
      preview_url:
        example: https://example.com/news/preview.webp
        type: string
        x-order: "4"
      redirect_url:
        example: https://example.com/news/redirect
        type: string
        x-order: "5"
      title:
        example: News title
        type: string
        x-order: "2"
    type: object
  Table:
    properties:
      description:
        example: en:Table description,ru:Описание таблицы
        type: string
        x-order: "3"
      icon_url:
        example: https://example.com/tables/icon.png
        type: string
        x-order: "4"
      id:
        example: 1
        type: integer
        x-order: "1"
      redirect_url:
        example: https://example.com/tables/redirect
        type: string
        x-order: "5"
      title:
        example: en:Table title,ru:Заголовок таблицы
        type: string
        x-order: "2"
    type: object
  UpdateNewsRequest:
    properties:
      description:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: News description
          ru: Описание новости
        x-order: "2"
      preview:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: news-en.webp
          ru: news-ru.webp
        x-order: "3"
      redirect_url:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: https://example.com/news/redirect_en
          ru: https://example.com/news/redirect_ru
        x-order: "4"
      title:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: News title
          ru: Заголовок новости
        x-order: "1"
    type: object
  UpdateTableRequest:
    properties:
      description:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: Elemental resistances and gauges of their elemental shields or structures
            along with notes on their specific mechanics that change those values.
          ru: Лиза
        x-order: "2"
      icon:
        example: https://example.com/tables/shield.webp
        type: string
        x-order: "3"
      redirect_url:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: https://example.com/tables/redirect_en
          ru: https://example.com/tables/redirect_ru
        x-order: "4"
      title:
        allOf:
        - $ref: '#/definitions/types.LocalizedString'
        example:
          en: Monsters' resistances and shields
          ru: Сопротивления и щиты монстров
        x-order: "1"
    type: object
  WeaselAppraiserCharacter:
    properties:
      artifact_profits:
        allOf:
        - $ref: '#/definitions/CharacterArtifactProfits'
        x-order: "4"
      element:
        allOf:
        - $ref: '#/definitions/types.Element'
        example: Pyro
        x-order: "2"
      icon_url:
        example: https://example.com/hu_tao.webp
        type: string
        x-order: "3"
      name:
        example: Hu Tao
        type: string
        x-order: "1"
    type: object
  models.ArtifactProfit:
    properties:
      ATK:
        type: integer
        x-order: "1"
      ATK_P:
        type: integer
        x-order: "2"
      CD:
        type: integer
        x-order: "11"
      CR:
        type: integer
        x-order: "10"
      DEF:
        type: integer
        x-order: "5"
      DEF_P:
        type: integer
        x-order: "6"
      ELEM:
        type: integer
        x-order: "9"
      EM:
        type: integer
        x-order: "7"
      ER:
        type: integer
        x-order: "8"
      HEAL:
        type: integer
        x-order: "13"
      HP:
        type: integer
        x-order: "3"
      HP_P:
        type: integer
        x-order: "4"
      PHYS:
        type: integer
        x-order: "12"
    type: object
  types.Element:
    enum:
    - None
    - Pyro
    - Hydro
    - Geo
    - Anemo
    - Electro
    - Cryo
    - Dendro
    type: string
    x-enum-varnames:
    - UndefinedElement
    - Pyro
    - Hydro
    - Geo
    - Anemo
    - Electro
    - Cryo
    - Dendro
  types.IconsUrl:
    additionalProperties:
      type: string
    type: object
  types.LocalizedString:
    additionalProperties:
      type: string
    type: object
  types.Rarity:
    enum:
    - "3"
    - "4"
    - "5"
    type: string
    x-enum-varnames:
    - Rare
    - Epic
    - Legendary
  types.WeaponType:
    enum:
    - Undefined
    - Sword
    - Claymore
    - Polearm
    - Bow
    - Catalyst
    type: string
    x-enum-varnames:
    - UndefinedWeapon
    - Sword
    - Claymore
    - Polearm
    - Bow
    - Catalyst
info:
  contact: {}
  description: Genshin Academy Service API
  title: Genshin Academy Service API
paths:
  /assets:
    delete:
      consumes:
      - multipart/form-data
      description: Deletes assets at the specified paths.
      parameters:
      - collectionFormat: multi
        description: Assets paths to delete
        example: characters/icons/lisa.webp,characters/icons/hu_tao.webp
        in: formData
        items:
          type: string
        name: paths
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Delete assets
      tags:
      - assets
  /assets/{path}:
    post:
      consumes:
      - multipart/form-data
      description: Uploads assets to the specified path.
      parameters:
      - description: Path to upload files
        enum:
        - characters
        - characters/icons
        - tables
        - news
        - opengraph
        in: formData
        name: path
        required: true
        type: string
      - collectionFormat: csv
        description: Files to upload
        in: formData
        items:
          type: file
        name: files
        required: true
        type: array
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Upload assets
      tags:
      - assets
  /characters:
    get:
      description: Get a list of characters with optional offset and limit for specific
        language.
      parameters:
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      - default: en,ru
        description: Preferred languages for response content
        in: header
        name: Accept-Languages
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Character'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all characters
      tags:
      - characters
    post:
      consumes:
      - application/json
      description: Create a new character with the provided data.
      parameters:
      - description: Character data
        in: body
        name: character
        required: true
        schema:
          $ref: '#/definitions/CreateCharacterRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a new character
      tags:
      - characters
  /characters/{id}:
    delete:
      description: Delete character by id.
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete character
      tags:
      - characters
  /characters/stats:
    get:
      description: Get a list of characters with artifact profits.
      parameters:
      - default: en,ru
        description: Preferred languages for response content
        in: header
        name: Accept-Languages
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WeaselAppraiserCharacter'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all characters with stats
      tags:
      - characters
      - weasel
      - appraiser
  /characters/stats/{id}:
    patch:
      consumes:
      - application/json
      description: Update character stats with the provided data.
      parameters:
      - description: Character stats. All fields are optional but at least 1 is required.
        in: body
        name: stats
        required: true
        schema:
          $ref: '#/definitions/CharacterArtifactProfits'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update character stats
      tags:
      - characters
      - weasel
      - appraiser
  /news:
    get:
      description: Get a list of news with optional offset and limit for specific
        language.
      parameters:
      - default: en,ru
        description: Preferred languages for response content
        in: header
        name: Accept-Languages
        type: string
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      - default: desc
        description: Sort by field
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/News'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all news
      tags:
      - news
    post:
      consumes:
      - application/json
      description: Create news with the provided data.
      parameters:
      - description: News data
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/CreateNewsRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create news
      tags:
      - news
  /news/{id}:
    delete:
      description: Delete news by id.
      parameters:
      - default: false
        description: Force deletion
        in: query
        name: force
        type: boolean
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete news
      tags:
      - news
    patch:
      consumes:
      - application/json
      description: Update news with the provided id and data.
      parameters:
      - description: News data. All fields are optional but at least 1 is required.
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/UpdateNewsRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update news
      tags:
      - news
  /tables:
    get:
      description: Get all tables.
      parameters:
      - default: en,ru
        description: Preferred languages for response content
        in: header
        name: Accept-Languages
        type: string
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      - default: desc
        description: Sort by field
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Table'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all tables
      tags:
      - tables
    post:
      consumes:
      - application/json
      description: Create table.
      parameters:
      - description: Table data.
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/CreateTableRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create table
      tags:
      - tables
  /tables/{id}:
    delete:
      description: Delete table by id.
      parameters:
      - default: false
        description: Force deletion
        in: query
        name: force
        type: boolean
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete table
      tags:
      - tables
    patch:
      consumes:
      - application/json
      description: Update table.
      parameters:
      - description: Table data. All fields are optional but at least 1 is required.
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/UpdateTableRequest'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update table
      tags:
      - tables
securityDefinitions:
  ApiKeyAuth:
    description: Token for endpoints
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
